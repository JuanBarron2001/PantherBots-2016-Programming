// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "SpyAuto.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

SpyAuto::SpyAuto(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis); //timeout is 4 seconds
	SetTimeout(4.000);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drivetrain.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void SpyAuto::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void SpyAuto::Execute() {
	Robot::roller->Spit(); //calls the function to 'spit' out ball
}

// Make this return true when this Command no longer needs to run execute()
bool SpyAuto::IsFinished() {
    return (Robot::roller->DigiInput() == false); //casue roller to stop when roller needed
}

// Called once after isFinished returns true
void SpyAuto::End()
{
	//stops the roller if time has run out
	if(IsTimedOut())
	{
		Robot::roller->Stop();
	}
	else
	{
		Robot::roller->Spit();
	}
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void SpyAuto::Interrupted() {

}
