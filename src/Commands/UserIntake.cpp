// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "UserIntake.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

UserIntake::UserIntake(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::roller.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void UserIntake::Initialize() {
	//Robot::roller->Suck();
}

// Called repeatedly when this Command is scheduled to run
void UserIntake::Execute() {
	//Robot::roller->Spit();
	Robot::roller->Suck(); //spins roller while nothing is detected
}

// Make this return true when this Command no longer needs to run execute()
bool UserIntake::IsFinished() {
    return (Robot::roller->DigiInput() == true); //when laser is interrupted it will end
}

// Called once after isFinished returns true
void UserIntake::End() {
	Robot::roller->Stop(); //what is called when DigiInput() == true
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void UserIntake::Interrupted() {
	End(); //safety measure
}
